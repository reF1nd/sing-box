name: Android ARM64 Build and Deploy

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: 1.10.0)'
        required: true
        type: string

env:
  BUILD_TAGS: "with_gvisor,with_quic,with_dhcp,with_wireguard,with_utls,with_acme,with_clash_api,with_tailscale"

jobs:
  prepare:
    name: Prepare Build Info
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      commit_info: ${{ steps.commit.outputs.info }}
      changelog: ${{ steps.changelog.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "📦 构建版本: ${VERSION}"

      - name: Get commit info
        id: commit
        run: |
          COMMIT_INFO=$(git log -1 --pretty=format:"%h - %s (%an)")
          echo "info=${COMMIT_INFO}" >> $GITHUB_OUTPUT
          echo "📝 提交信息: ${COMMIT_INFO}"

      - name: Generate changelog
        id: changelog
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            # 获取最近的标签变更
            CHANGELOG=$(git log --oneline --no-merges $(git describe --tags --abbrev=0 HEAD~1)..HEAD | head -10 | sed 's/^/• /')
          else
            CHANGELOG="• 手动触发构建"
          fi
          
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="• 无重要变更"
          fi
          
          echo "content<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  build_android_arm64:
    name: Build Android ARM64
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24

      - name: Setup Android NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r28

      - name: Install build tool
        run: |
          echo "=== 安装构建工具 ==="
          go install -v ./cmd/internal/build
          which build
          build --help || echo "构建工具安装完成"

      - name: Build Android ARM64 Binary
        run: |
          set -xeuo pipefail
          echo "=== 开始 Android ARM64 构建 ==="
          
          # 设置 Android NDK 环境
          export ANDROID_NDK_HOME="${{ steps.setup-ndk.outputs.ndk-path }}"
          export CC="${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang"
          export CXX="${CC}++"
          
          # 验证编译器
          echo "=== 验证编译器 ==="
          if [ -f "$CC" ]; then
            echo "✅ 找到 Android 编译器: $CC"
            $CC --version
          else
            echo "❌ 未找到 Android 编译器: $CC"
            exit 1
          fi
          
          # 创建输出目录
          mkdir -p dist
          
          # 构建二进制文件
          echo "=== 构建 Android ARM64 二进制文件 ==="
          build go build -v -trimpath -o dist/sing-box \
            -tags "${BUILD_TAGS}" \
            -ldflags "-s -buildid= -X github.com/sagernet/sing-box/constant.Version=${{ needs.prepare.outputs.version }}" \
            ./cmd/sing-box
          
          # 验证构建结果
          echo "=== 验证构建结果 ==="
          ls -la dist/
          file dist/sing-box
          
          # 设置可执行权限
          chmod +x dist/sing-box
          
          echo "✅ Android ARM64 构建完成"
        env:
          CGO_ENABLED: "1"
          GOOS: android
          GOARCH: arm64

      - name: Create archive
        run: |
          cd dist
          tar -czf sing-box-${{ needs.prepare.outputs.version }}-android-arm64.tar.gz sing-box
          ls -la

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-arm64-binary
          path: |
            dist/sing-box
            dist/sing-box-${{ needs.prepare.outputs.version }}-android-arm64.tar.gz

  push_to_magisk:
    name: Push to box_for_magisk
    runs-on: ubuntu-latest
    needs: [prepare, build_android_arm64]
    steps:
      - name: Download Android ARM64 binary
        uses: actions/download-artifact@v4
        with:
          name: android-arm64-binary
          path: android_binary/

      - name: Verify downloaded files
        run: |
          echo "=== 查看下载的文件 ==="
          ls -la android_binary/
          file android_binary/sing-box
          chmod +x android_binary/sing-box

      - name: Checkout box_for_magisk repository
        uses: actions/checkout@v4
        with:
          repository: ridesnails/box_for_magisk
          ref: simple
          token: ${{ secrets.BOX_FOR_MAGISK_TOKEN || secrets.GITHUB_TOKEN }}
          path: box_for_magisk

      - name: Setup Git
        run: |
          cd box_for_magisk
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Update binary file
        run: |
          echo "=== 更新二进制文件 ==="
          
          # 确保目标目录存在
          mkdir -p box_for_magisk/box/bin
          
          # 复制新的二进制文件
          cp android_binary/sing-box box_for_magisk/box/bin/sing-box
          chmod +x box_for_magisk/box/bin/sing-box
          
          # 验证文件
          echo "=== 验证更新后的文件 ==="
          ls -la box_for_magisk/box/bin/
          file box_for_magisk/box/bin/sing-box

      - name: Commit and push changes
        run: |
          cd box_for_magisk
          
          # 检查是否有变更
          if git diff --quiet; then
            echo "📝 没有文件变更，跳过提交"
            echo "NO_CHANGES=true" >> $GITHUB_ENV
          else
            echo "📝 发现文件变更，准备提交"
            git add box/bin/sing-box
            git commit -m "Update sing-box binary to ${{ needs.prepare.outputs.version }} (reF1nd)"
            git push origin simple
            echo "✅ 成功推送到 ridesnails/box_for_magisk:simple"
            echo "PUSH_SUCCESS=true" >> $GITHUB_ENV
          fi

  notify:
    name: Send Notification
    runs-on: ubuntu-latest
    needs: [prepare, build_android_arm64, push_to_magisk]
    if: always()
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
    steps:
      - name: Send Telegram notification
        if: ${{ env.TELEGRAM_BOT_TOKEN != '' && env.TELEGRAM_CHAT_ID != '' }}
        run: |
          # 获取构建状态
          BUILD_STATUS="${{ needs.build_android_arm64.result }}"
          PUSH_STATUS="${{ needs.push_to_magisk.result }}"
          
          # 设置状态图标
          if [ "$BUILD_STATUS" = "success" ]; then
            BUILD_ICON="✅"
          else
            BUILD_ICON="❌"
          fi
          
          if [ "$PUSH_STATUS" = "success" ]; then
            PUSH_ICON="✅"
            OVERALL_STATUS="✅ 构建和部署成功"
          else
            PUSH_ICON="❌"
            OVERALL_STATUS="❌ 构建或部署失败"
          fi
          
          # 构建消息内容
          MESSAGE="📱 **sing-box Android ARM64 构建报告**%0A%0A${OVERALL_STATUS}%0A%0A🏷️ **版本**: \`${{ needs.prepare.outputs.version }}\`%0A🕐 **构建时间**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')%0A%0A📋 **提交信息**:%0A\`\`\`%0A${{ needs.prepare.outputs.commit_info }}\`\`\`%0A%0A🔧 **构建状态**:%0A• Android ARM64 构建: ${BUILD_ICON}%0A• Magisk 仓库推送: ${PUSH_ICON}%0A%0A📦 **部署信息**:%0A• 目标仓库: ridesnails/box_for_magisk%0A• 目标分支: simple%0A• 文件路径: box/bin/sing-box%0A• 文件权限: 755 (可执行)%0A%0A📝 **更新日志**:%0A${{ needs.prepare.outputs.changelog }}%0A%0A🔗 **详细日志**: [GitHub Actions](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          
          # 发送消息到 Telegram
          curl -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d "chat_id=${TELEGRAM_CHAT_ID}" \
            -d "text=${MESSAGE}" \
            -d "parse_mode=Markdown" \
            -d "disable_web_page_preview=true" || echo "Failed to send notification"
        continue-on-error: true
